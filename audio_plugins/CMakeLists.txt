
# SPARTA Banner:
message(STATUS "Configuring SPARTA (Version ${PROJECT_VERSION})...")

# Versions to build:
set(BUILD_PLUGIN_FORMATS "")
if (BUILD_PLUGIN_FORMAT_VST2)
    juce_set_vst2_sdk_path(${CMAKE_CURRENT_SOURCE_DIR}/../SDKs/VST2_SDK)
    list(APPEND BUILD_PLUGIN_FORMATS VST)
    message("--  Building VST versions")
endif()
if (BUILD_PLUGIN_FORMAT_VST3) 
    list(APPEND BUILD_PLUGIN_FORMATS VST3)
    message("--  Building VST3 versions")
endif()
if (BUILD_PLUGIN_FORMAT_AU) 
    list(APPEND BUILD_PLUGIN_FORMATS AU)
    message("--  Building AU versions")
endif()
if (BUILD_PLUGIN_FORMAT_LV2) 
    list(APPEND BUILD_PLUGIN_FORMATS LV2)
    message("--  Building LV2 versions")
endif()
if (BUILD_PLUGIN_FORMAT_AAX) 
    list(APPEND BUILD_PLUGIN_FORMATS AAX)
    message("--  Building AAX versions")
endif()

# Add the SPARTA plugins to the build tree
add_subdirectory(_SPARTA_ambiDRC_)
add_subdirectory(_SPARTA_ambiENC_)
add_subdirectory(_SPARTA_ambiRoomSim_)
add_subdirectory(_SPARTA_array2sh_)
add_subdirectory(_SPARTA_beamformer_)
add_subdirectory(_SPARTA_decorrelator_)
add_subdirectory(_SPARTA_matrixConv_)
add_subdirectory(_SPARTA_multiConv_)
add_subdirectory(_SPARTA_panner_)
add_subdirectory(_SPARTA_pitchShifter_)
add_subdirectory(_SPARTA_rotator_)

# These plug-ins rely on the JUCE CameraDevice, which is sadly not implemented for Linux users:
if(NOT UNIX OR APPLE)
    add_subdirectory(_SPARTA_dirass_)
    add_subdirectory(_SPARTA_powermap_)
    add_subdirectory(_SPARTA_sldoa_)
else()
    message(STATUS "  Note: disabling the plug-ins which rely on JUCE CameraDevice.")
endif()

# These plug-ins rely on the saf_sofa_reader module being enabled:
if(SAF_ENABLE_SOFA_READER_MODULE)
    add_subdirectory(_SPARTA_ambiBIN_)
    add_subdirectory(_SPARTA_ambiDEC_)
    add_subdirectory(_SPARTA_binauraliser_)
    add_subdirectory(_SPARTA_spreader_)
    add_subdirectory(_SPARTA_binauraliser_nf_)
    add_subdirectory(_SPARTA_6DoFconv_)
else()
    message(STATUS "  Note: disabling the plug-ins which rely on the saf_sofa_reader module.")
endif()
